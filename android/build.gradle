group 'com.fluttercandies.flutter_bdface_collect'
version '1.0'

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
    }
}

def libs = file("libs")

rootProject.allprojects {
    repositories {
        google()
        jcenter()
        flatDir { dirs libs }
    }
}

def flutterRoot = file("local.properties").with {
    if(!it.exists()) return null
    new Properties().with(true, p -> p.load(it.newReader()))["flutter.sdk"]
}
println("flutterRoot: $flutterRoot")

def flutterRepo
def flutterEngine
if(flutterRoot){
    flutterRepo = System.getenv("FLUTTER_STORAGE_BASE_URL")
    println("flutterRepo: $flutterRepo")

    flutterEngine = new File(flutterRoot, "bin/internal/engine.version").text.trim()
    println("flutterEngine: $flutterEngine")
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.has('compileSdkVersion')? rootProject.ext.compileSdkVersion: 30

    defaultConfig {
        minSdkVersion 22
    }

    sourceSets {
        main.jniLibs.srcDir 'libs'
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    packagingOptions {
        merge 'res/values/values.xml'
        merge 'AndroidManifest.xml'
        merge 'R.txt'
        merge 'classes.jar'
    }
    buildTypes {
        release {
            consumerProguardFiles "proguard-rules.pro"
        }
    }
}

repositories {
    if(flutterRepo) maven { url "$flutterRepo/download.flutter.io" }
}

dependencies {
    implementation(name: "faceplatform-release-4.1.5", ext: "aar")

    if(flutterRoot){
        implementation "androidx.appcompat:appcompat:1.1.0"
        implementation "io.flutter:flutter_embedding_debug:1.0.0-$flutterEngine"
    }
}
